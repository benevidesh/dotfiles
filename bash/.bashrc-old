#                          .           .           
#                          |           |           
#                          |-. ,-: ,-. |-. ;-. ,-. 
#                          | | | | `-. | | |   |   
#                        o `-' `-` `-' ' ' '   `-' 
                          

PS1='\[\033[01;32m\]\w\[\033[00m\] \[\033[01;37m\]\[\033[00m\]\$ '


# alias {{{
alias dots='/usr/bin/git --git-dir=/home/benevides/.cfg/ --work-tree=/home/benevides'
# }}}
# exports {{{

### P.A.R.A. method

export _INBOX="/home/benevides/0.Inbox/"
export _PROJECTS="/home/benevides/1.Projects/"
export _AREAS="/home/benevides/2.Areas/"
export _RESOURCES="/home/benevides/3.Resources/"
export _ARCHIVES="/home/benevides/4.Archives/" 

#### MISC
#export PS1="\e[0;95m \w\n: \e[0m"
export TEXINPUTS=::$HOME/resources/latex
export HISTCONTROL=ignoreboth:erasedups
export NVIM_LISTEN_ADDRESS=/tmp/nvimsocket
export BIB=$HOME/texmf/bibtex/bib/babilonia.bib
export FFF_CD_FILE=~/.fff_d # CD on exit helper file
export FFF_COL1=4
#export FZF_COMPLETION_OPTS='+c -x'
export HISTSIZE=3000
export LESS=-R
export LESS_TERMCAP_mb=$'\E[1;31m'     # begin blink
export LESS_TERMCAP_md=$'\E[1;34m'     # begin bold
export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
export LESS_TERMCAP_so=$'\E[01;40;31m' # begin reverse video
export LESS_TERMCAP_ue=$'\E[0m'        # reset underline
export LESS_TERMCAP_us=$'\E[0;35m'     # begin underline
export MANPAGER='nvim +Man!'
export PATH=$PATH:$HOME/.scripts/:$HOME/.local/bin
export EDITOR='nvim'
export BAT_THEME="base16"
# }}}
# prompt {{{


#eval "$(starship init bash)"
#}}}
# completion {{{
[[ $PS1 && -f /usr/share/bash-completion/bash_completion ]] && \
    . /usr/share/bash-completion/bash_completion
# }}}
# general {{{
#
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

vs () {
    $EDITOR $(which $@)
}
# SOURCE
source $HOME/.bash_aliases
#}}}



#                                FUNCTIONS                                  {{{
###############################################################################
version () {
	[[ -z "$*" ]] && echo "No message to commit" || _c="$*"
	git add -A
	git commit -m "${_c}"
}

function show-colors () {
for i in {0..255} ; do
    printf "\x1b[38;5;${i}m${i} "
done
}



mp3p () {
    youtube-dl --yes-playlist --ignore-errors --continue -f bestaudio \
    --extract-audio --audio-format mp3 --audio-quality 0 \
    -o './%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s' "$1";
}
# }}}

# FZF {{{
###############################################################################

# for using with fo()
function open () {
    xdg-open "$*" &
}

source /usr/share/fzf/key-bindings.bash
source /usr/share/fzf/completion.bash


## OPTS for FZF
export FZF_DEFAULT_OPTS="
--layout=reverse
--info=inline
--height=80%
--multi
--preview-window=:hidden
--preview '([[ -f {} ]] && (bat --style=numbers --color=always {} || cat {})) || ([[ -d {} ]] && (tree -C {} | less)) || echo {} 2> /dev/null | head -200'
--prompt='∼ ' --pointer='»' --marker='✓ '
--bind '?:toggle-preview'
--bind 'ctrl-a:select-all'
--bind 'ctrl-y:execute-silent(echo {+} | xclip -selection clipboard)'
--bind 'ctrl-e:execute(echo {+} | xargs -o nvim)'
--bind 'ctrl-v:execute(code {+})'
"

export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
 --color=fg:#cbccc6,bg:#161821,hl:#e2a478
 --color=fg+:#707a8c,bg+:#191e2a,hl+:#e2a478
 --color=info:#89b8c2,prompt:#707a8c,pointer:#cbccc6
 --color=marker:#73d0ff,spinner:#73d0ff,header:#d4bfff'
# }}}

# fo fuzzy open files {{{
fo() {
  IFS=$'\n' out=("$(fzf-tmux -p 80% --query="$1" --exit-0 --expect=ctrl-o,ctrl-e)")
  key=$(head -1 <<< "$out")
  file=$(head -2 <<< "$out" | tail -1)
  if [ -n "$file" ]; then
    [ "$key" = ctrl-o ] && open "$file" || >/dev/null 2>&1
  fi
}
# }}}

# fd - cd to selected directory {{{2
fd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf --preview 'tree -C {} | head -200') &&
  cd "$dir"
}
# cdf - cd into the directory of the selected file
ff() {
   local file
   local dir
   file=$(fzf +m -q "$1") && dir=$(dirname "$file") && cd "$dir"
}
# }}}2

# fda - including hidden directories {{{
fda() {
  local dir
  dir=$(find ${1:-.} -type d 2> /dev/null | fzf +m) && cd "$dir"
}
# }}}

# find-in-file - usage: fif <SEARCH_TERM> {{{
#origin: https://medium.com/better-programming/boost-your-command-line-productivity-with-fuzzy-finder-985aa162ba5d
fif() {
  if [ ! "$#" -gt 0 ]; then
    echo "Need a string to search for!";
    return 1;
  fi
  rg --files-with-matches --no-messages "$1" | fzf $FZF_PREVIEW_WINDOW --preview "rg --ignore-case --pretty --context 10 '$1' {}"
}
# }}}

# }}}

#                                COLOR FOT TTY                              {{{
###############################################################################

#if [[ $(fgconsole 2>/dev/null) -ge 1  ]]; then
#    echo -en "\e]P0282a36" #black
#    echo -en "\e]P8545862" #darkgrey
#
#    echo -en "\e]P1e06c75" #darkred
#    echo -en "\e]P9e06c75" #red
#
#    echo -en "\e]P298c379" #darkgreen base0B
#    echo -en "\e]PA298c379" #green
#
#    echo -en "\e]P3e5c07b" #brown base0A
#    echo -en "\e]PBe5c07b" #yellow
#
#    echo -en "\e]P461afef" #darkblue base0D
#    echo -en "\e]PC81a1c1" #blue
#
#    echo -en "\e]P5565c64" #darkmagenta
#    echo -en "\e]PD565c64" 
#
#    echo -en "\e]P656b6c2" #darkcyan base0C
#    echo -en "\e]PE56b6c2" #cyan
#
#    echo -en "\e]P78fbcbb" #lightgrey base05
#    echo -en "\e]PFabb2bf" #white
#    clear #for background artifacting
#fi
#
# }}}

#[ -x "$(command -v tmux)" ] \
#  && [ -z "${TMUX}" ] \
#  && { tmux attach || tmux; } >/dev/null 2>&1


bind -m vi-insert -x '"\C-o": fo'

fd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf --preview 'tree -C {} | head -200') &&
  cd "$dir"
}

# vim:foldmethod=marker
